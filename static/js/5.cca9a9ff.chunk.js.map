{"version":3,"sources":["components/pages/Chat/ChatPage.tsx"],"names":["Chat","useState","myMessage","setMyMessage","messages","useSelector","state","chat","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","map","message","index","Message","onChange","e","currentTarget","value","onClick","sendMessage","props","src","photo","alt","userName","ChatPage"],"mappings":"wKAgBMA,EAAO,WAAO,IAAD,EAEiBC,mBAAS,IAF1B,mBAEVC,EAFU,KAECC,EAFD,KAIXC,EAAWC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,YAE3DI,EAAWC,cAEjBC,qBAAU,WAER,OADAF,EAASG,eACF,WACLH,EAASI,kBAEV,IAUH,OACE,gCACE,8BACGR,EAASS,KAAI,SAACC,EAA0BC,GACvC,OAAO,cAACC,EAAD,CAASF,QAASA,GAAcC,QAG3C,0BAAUE,SAAU,SAACC,GAAD,OAAOf,EAAae,EAAEC,cAAcC,QAAQA,MAAOlB,IACvE,8BACE,wBAAQmB,QAAS,WAjBD,IAACP,KAiBoBZ,KAbzCM,EAASc,YAAYR,IACrBX,EAAa,MAYT,wBAUFa,EAAsC,SAACO,GAC3C,OACE,gCACE,8BAAK,qBAAKC,IAAKD,EAAMT,QAAQW,MAAOC,IAAI,WACxC,8BAAMH,EAAMT,QAAQa,WACpB,8BAAMJ,EAAMT,QAAQA,cAKXc,UA5DE,WACf,OACE,8BACE,cAAC5B,EAAD","file":"static/js/5.cca9a9ff.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {ChatMessageType} from \"../../../api/chat-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessage, startMessagesListening, stopMessagesListening} from \"../../../redux/chat-reducer\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\nlet webSocketChanel: WebSocket;\r\n\r\nconst ChatPage = () => {\r\n  return (\r\n    <div>\r\n      <Chat/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Chat = () => {\r\n\r\n  const [myMessage, setMyMessage] = useState('')\r\n\r\n  const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(startMessagesListening())\r\n    return () => {\r\n      dispatch(stopMessagesListening())\r\n    }\r\n  }, [])\r\n\r\n  const onSendMessage = (message: string) => {\r\n    if (!message) {\r\n      return\r\n    }\r\n    dispatch(sendMessage(message));\r\n    setMyMessage('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((message: ChatMessageType, index) => {\r\n          return <Message message={message} key={index}/>\r\n        })}\r\n      </div>\r\n      <textarea onChange={(e) => setMyMessage(e.currentTarget.value)} value={myMessage}></textarea>\r\n      <div>\r\n        <button onClick={() => onSendMessage(myMessage)}>Send</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype MessagePropsType = {\r\n  message: ChatMessageType\r\n}\r\n\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n  return (\r\n    <div>\r\n      <div><img src={props.message.photo} alt=\"user\"/></div>\r\n      <div>{props.message.userName}</div>\r\n      <div>{props.message.message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatPage;"],"sourceRoot":""}