{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.tsx","Hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","styles","dialog","to","logo","src","ava","alt","name","Message","message","DialogsMessage","onSubmit","values","onSendMessage","myMessage","render","handleSubmit","validate","validators","maxLength","input","meta","error","placeholder","rows","cols","redBorder","errorMessage","type","disabled","Dialogs","dialogsPage","dialogs","map","d","messages","m","sendMessage","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dialogsActions"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,UAAY,6B,oBCAnJD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,8HCa5CC,EAVI,SAACC,GAChB,IAAMC,EAAK,YAAcD,EAAME,GAC/B,OAAO,qBAAKC,UAAWC,IAAOC,OAAvB,SACG,eAAC,IAAD,CAASC,GAAIL,EAAb,UACE,qBAAKE,UAAWC,IAAOG,KAAMC,IAAKR,EAAMS,IAAKC,IAAI,SAChDV,EAAMW,WCFRC,EAJC,SAACZ,GACb,OAAO,qBAAKG,UAAWC,IAAOC,OAAvB,SAAgCL,EAAMa,W,gBCY3CC,EAAuD,SAACd,GAC5D,OACI,cAAC,IAAD,CACIe,SAAU,SAACC,GACThB,EAAMiB,cAAcD,EAAOE,WAC3BF,EAAOE,UAAY,IAErBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAcJ,EAAjB,EAAiBA,OAAjB,OACJ,uBAAMD,SAAUK,EAAhB,UACE,cAAC,IAAD,CAAOT,KAAK,YAAYU,SAAYC,IAAWC,UAAU,IAAzD,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,8BACGA,EAAKC,MACF,qCACE,oDAAcF,GAAd,IACUG,YAAY,oBACZC,KAAO,EACPC,KAAO,GACP1B,UAAaC,IAAO0B,aAC9B,sBAAM3B,UAAWC,IAAO2B,aAAxB,SAAuCN,EAAKC,WAE9C,oDAAcF,GAAd,IAAqBG,YAAY,oBAAoBC,KAAO,EAAGC,KAAO,WAKlF,wBAAQG,KAAK,SAASC,UAAWjB,EAAOE,UAAxC,2BAoCDgB,EAxBgC,SAAClC,GAE9C,IAAMK,EAASL,EAAMmC,YAAYC,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY7B,IAAM6B,EAAE7B,IAAKE,KAAM2B,EAAE3B,KAAMT,GAAIoC,EAAEpC,IAASoC,EAAEpC,OACrGW,EAAUb,EAAMmC,YAAYI,SAASF,KAAK,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,SAAgB2B,EAAEtC,OAMzF,OACI,sBAAKC,UAAWC,IAAOgC,QAAvB,UACE,8BACI/B,IAEJ,gCACE,qBAAKF,UAAWC,IAAOmC,SAAvB,SACI1B,IAEJ,cAAC,EAAD,CAAgBI,cAbJ,SAACC,GACrBlB,EAAMyC,YAAYvB,a,gDCxDhBwB,EAAkB,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAwBRE,EApBU,SAACC,GAAe,IACjCC,EADgC,uKAGlC,OAAKC,KAAKjD,MAAM4C,OACT,cAACG,EAAD,eAAeE,KAAKjD,QADI,cAAC,IAAD,CAAUM,GAAG,eAHV,GACN4C,IAAMH,WAOtC,OADuCI,YAAQT,EAARS,CAAyBH,I,QCLnDI,sBACXD,aAPoB,SAACR,GACvB,MAAO,CACLR,YAAaQ,EAAMR,eAKM,CAACM,YAAaY,IAAeZ,cACtDK,EAFWM,CAGblB","file":"static/js/3.de2c5fba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__cnCY8\",\"errorMessage\":\"Dialogs_errorMessage__30XrS\",\"messages\":\"Dialogs_messages__s9gqT\",\"redBorder\":\"Dialogs_redBorder__CGrTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"DialogItem_logo__2NKcN\",\"dialog\":\"DialogItem_dialog__1FO-Y\"};","import React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    const path=\"/Dialogs/\" + props.id;\r\n    return <div className={styles.dialog} >\r\n              <NavLink to={path}>\r\n                <img className={styles.logo} src={props.ava} alt=\"user\"/>\r\n                {props.name}\r\n              </NavLink>\r\n            </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={styles.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Form, Field } from 'react-final-form';\r\nimport {validators} from \"../Common/FormValidation/FormValidation\";\r\nimport { InitialStateType } from '../../redux/dialogs-reducer';\r\n\r\ntype DialogsMessageOwnPropsType = {\r\n    onSendMessage: (myMessage: string) => void\r\n}\r\n\r\ninterface DialogsMessageValues {\r\n    myMessage: string\r\n}\r\n\r\nconst DialogsMessage: React.FC<DialogsMessageOwnPropsType> = (props) => {\r\n  return (\r\n      <Form\r\n          onSubmit={(values: DialogsMessageValues) => {\r\n            props.onSendMessage(values.myMessage);\r\n            values.myMessage = \"\";\r\n          }}\r\n          render={({ handleSubmit, values }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Field name=\"myMessage\" validate = {validators.maxLength(50)} >\r\n                  {({ input, meta }) => (\r\n                      <div>\r\n                        {meta.error\r\n                          ? <>\r\n                              <textarea {...input}\r\n                                        placeholder=\"Type your message\"\r\n                                        rows ={5}\r\n                                        cols ={25}\r\n                                        className = {styles.redBorder} />\r\n                              <span className={styles.errorMessage}>{meta.error}</span>\r\n                            </>\r\n                          : <textarea {...input} placeholder=\"Type your message\" rows ={5} cols ={25} />\r\n                        }\r\n                      </div>\r\n                  )}\r\n                </Field>\r\n                <button type=\"submit\" disabled={!values.myMessage} >Submit</button>\r\n              </form>\r\n          )}\r\n      />\r\n  )\r\n}\r\n\r\ntype DialogsOwnPropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (myMessage: string) => void\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsOwnPropsType> = (props) => {\r\n\r\n  const dialog = props.dialogsPage.dialogs.map( d => <DialogItem ava= {d.ava} name={d.name} id={d.id} key={d.id} />);\r\n  const message = props.dialogsPage.messages.map( m => <Message message={m.message} key = {m.id} />);\r\n\r\n  const onSendMessage = (myMessage: string) => {\r\n    props.sendMessage(myMessage);\r\n  }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n          <div>\r\n            { dialog }\r\n          </div>\r\n          <div>\r\n            <div className={styles.messages}>\r\n              { message }\r\n            </div>\r\n            <DialogsMessage onSendMessage = {onSendMessage} />\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/Login\" />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n// const withAuthRedirect = (Component) => {\r\n//   const RedirectComponent = (props) => {\r\n//     if (!props.isAuth) return <Redirect to=\"/Login\" />\r\n//     return <Component {...props} />\r\n//   }\r\n//   const ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n//   return ConnectedAuthRedirectComponent;\r\n// }\r\n\r\nexport default withAuthRedirect\r\n","import {dialogsActions} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from \"../../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage: dialogsActions.sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}